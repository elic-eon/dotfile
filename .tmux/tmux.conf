set -g default-terminal "screen-256color"

# set C-Fn to switch nth-window
unbind -n F1
unbind -n F2
unbind -n F3
unbind -n F4
unbind -n F5
unbind -n F6
unbind -n F7
unbind -n F8
unbind -n F9
unbind -n F10
bind-key -n C-F1 select-window -t :1
bind-key -n C-F2 select-window -t :2
bind-key -n C-F3 select-window -t :3
bind-key -n C-F4 select-window -t :4
bind-key -n C-F5 select-window -t :5
bind-key -n C-F6 select-window -t :6
bind-key -n C-F7 select-window -t :7
bind-key -n C-F8 select-window -t :8
bind-key -n C-F9 select-window -t :9
bind-key -n C-F10 select-window -t :0

# switch windows
bind-key -n C-Right next-window
bind-key -n C-Left previous-window

# set default title for new window
unbind c
bind-key c new-window -n 'new'

# ----------------------
# Status Bar
# -----------------------
#set-option -g status on                # turn the status bar on
#set -g status-utf8 on                  # set utf-8 for the status bar
#set -g status-interval 2               # set update frequencey (default 15 seconds)
#set -g status-justify centre           # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
#setw -g monitor-activity on
#set -g visual-activity on

# set color for status bar
#set-option -g status-bg colour235 #base02
#set-option -g status-fg yellow #yellow
#set-option -g status-attr dim

# set window list colors - red for active and cyan for inactive
#set-window-option -g window-status-fg brightblue #base0
#set-window-option -g window-status-bg colour236
#set-window-option -g window-status-attr dim

#set-window-option -g window-status-current-fg brightred #orange
#set-window-option -g window-status-current-bg colour236
#set-window-option -g window-status-current-attr bright

# show host name and IP address on left side of status bar
#set -g status-left-length 20
#set -g status-left "#[fg=green]@#h"

# show session name, window & pane number, date and time on right side of
# status bar
#set -g status-right-length 40
#set -g status-right "#[fg=yellow]%d %b #[fg=green]%l:%M %p"



# powerline config
run-shell 'powerline-daemon -q'
if-shell 'test -z "$POWERLINE_CONFIG_COMMAND"' 'set-environment -g POWERLINE_CONFIG_COMMAND powerline-config'

# Don't version-check for this core functionality -- anything too old to
# support these options likely won't work well with powerline
set -g status on
set -g status-utf8 on
set -g status-interval 2
set -g status-left-length 20
set -g status-right '#(eval $POWERLINE_COMMAND tmux right -R pane_id=`tmux display -p "#D"`)'
set -g status-right-length 150
set -g window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour240] #[default]#W "
set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"

# Legacy status-left definition to be overwritten for tmux Versions 1.8+
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]#(eval $POWERLINE_COMMAND tmux left)'

# Simplify tmux version checking by using multiple config files. Source these
# config files based on the version in which tmux features were added and/or
# deprecated. By splitting these configuration options into separate files,
run-shell 'eval $POWERLINE_CONFIG_COMMAND tmux source'
# vim: ft=tmux

# mouse
set -g mode-mouse off
